// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoDesafio3.Model;

#nullable disable

namespace ProyectoDesafio3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoDesafio3.Model.Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RecetaId")
                        .HasColumnType("int");

                    b.Property<string>("UnidadMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecetaId");

                    b.ToTable("Ingredientes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cantidad = 1.0,
                            Nombre = "Lechuga romana",
                            RecetaId = 1,
                            UnidadMedida = "Unidad"
                        },
                        new
                        {
                            Id = 2,
                            Cantidad = 200.0,
                            Nombre = "Pollo a la parrilla",
                            RecetaId = 1,
                            UnidadMedida = "Gramos"
                        },
                        new
                        {
                            Id = 3,
                            Cantidad = 50.0,
                            Nombre = "Aderezo César",
                            RecetaId = 1,
                            UnidadMedida = "Mililitros"
                        },
                        new
                        {
                            Id = 4,
                            Cantidad = 250.0,
                            Nombre = "Pasta espagueti",
                            RecetaId = 2,
                            UnidadMedida = "Gramos"
                        },
                        new
                        {
                            Id = 5,
                            Cantidad = 100.0,
                            Nombre = "Crema de leche",
                            RecetaId = 2,
                            UnidadMedida = "Mililitros"
                        },
                        new
                        {
                            Id = 6,
                            Cantidad = 1.0,
                            Nombre = "Huevo",
                            RecetaId = 2,
                            UnidadMedida = "Unidad"
                        },
                        new
                        {
                            Id = 7,
                            Cantidad = 50.0,
                            Nombre = "Queso parmesano",
                            RecetaId = 2,
                            UnidadMedida = "Gramos"
                        },
                        new
                        {
                            Id = 8,
                            Cantidad = 500.0,
                            Nombre = "Tomates frescos",
                            RecetaId = 3,
                            UnidadMedida = "Gramos"
                        },
                        new
                        {
                            Id = 9,
                            Cantidad = 5.0,
                            Nombre = "Albahaca",
                            RecetaId = 3,
                            UnidadMedida = "Hojas"
                        });
                });

            modelBuilder.Entity("ProyectoDesafio3.Model.PasoPreparacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("RecetaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecetaId");

                    b.ToTable("PasoPreparacions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Lavar la lechuga romana y cortarla en trozos.",
                            Orden = 1,
                            RecetaId = 1
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Asar el pollo a la parrilla y cortarlo en tiras.",
                            Orden = 2,
                            RecetaId = 1
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Mezclar la lechuga, el pollo y el aderezo césar.",
                            Orden = 3,
                            RecetaId = 1
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Cocinar la pasta en agua hirviendo con sal.",
                            Orden = 1,
                            RecetaId = 2
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "Mezclar el huevo, la crema y el queso parmesano.",
                            Orden = 2,
                            RecetaId = 2
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "Añadir la mezcla a la pasta caliente.",
                            Orden = 3,
                            RecetaId = 2
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "Cortar los tomates y hervirlos hasta que se ablanden.",
                            Orden = 1,
                            RecetaId = 3
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "Licuar los tomates y agregar la albahaca.",
                            Orden = 2,
                            RecetaId = 3
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "Cocinar por 10 minutos más y servir caliente.",
                            Orden = 3,
                            RecetaId = 3
                        });
                });

            modelBuilder.Entity("ProyectoDesafio3.Model.Recetas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TiempoEstimadoPreparacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Recetas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Ensalada clásica con pollo, lechuga y aderezo César.",
                            Nombre = "Ensalada César",
                            TiempoEstimadoPreparacion = 20
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Pasta con salsa de crema, huevo y queso parmesano.",
                            Nombre = "Pasta Carbonara",
                            TiempoEstimadoPreparacion = 30
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Sopa ligera de tomate con albahaca.",
                            Nombre = "Sopa de Tomate",
                            TiempoEstimadoPreparacion = 40
                        });
                });

            modelBuilder.Entity("ProyectoDesafio3.Model.Ingrediente", b =>
                {
                    b.HasOne("ProyectoDesafio3.Model.Recetas", "Receta")
                        .WithMany("Ingredientes")
                        .HasForeignKey("RecetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("ProyectoDesafio3.Model.PasoPreparacion", b =>
                {
                    b.HasOne("ProyectoDesafio3.Model.Recetas", "Receta")
                        .WithMany("PasosPreparacion")
                        .HasForeignKey("RecetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receta");
                });

            modelBuilder.Entity("ProyectoDesafio3.Model.Recetas", b =>
                {
                    b.Navigation("Ingredientes");

                    b.Navigation("PasosPreparacion");
                });
#pragma warning restore 612, 618
        }
    }
}
